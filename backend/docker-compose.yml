version: "3.8"

services:
    # PostgreSQL Database
    postgres:
        image: postgres:16-alpine
        container_name: veranode-postgres
        environment:
            POSTGRES_USER: veranode
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-veranode_prod_password}
            POSTGRES_DB: veranode_db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U veranode"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - veranode-network

    # Redis for Celery broker and cache
    redis:
        image: redis:7-alpine
        container_name: veranode-redis
        command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
        volumes:
            - redis_data:/data
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - veranode-network

    # FastAPI Application
    api:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: veranode-api
        command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
        environment:
            DATABASE_HOST: postgres
            DATABASE_PORT: 5432
            DATABASE_USER: veranode
            DATABASE_PASSWORD: ${DATABASE_PASSWORD:-veranode_prod_password}
            DATABASE_NAME: veranode_db
            REDIS_URL: redis://redis:6379/0
            CELERY_BROKER_URL: redis://redis:6379/0
            CELERY_RESULT_BACKEND: redis://redis:6379/0
            SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
            DEBUG: ${DEBUG:-false}
        volumes:
            - ./data/models:/app/data/models
            - ./data/proofs:/app/data/proofs
            - ./logs:/app/logs
        ports:
            - "8000:8000"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        networks:
            - veranode-network
        restart: unless-stopped

    # Celery Worker
    celery-worker:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: veranode-celery-worker
        command: celery -A app.workers.celery_app worker --loglevel=info --pool=solo --concurrency=2
        environment:
            DATABASE_HOST: postgres
            DATABASE_PORT: 5432
            DATABASE_USER: veranode
            DATABASE_PASSWORD: ${DATABASE_PASSWORD:-veranode_prod_password}
            DATABASE_NAME: veranode_db
            REDIS_URL: redis://redis:6379/0
            CELERY_BROKER_URL: redis://redis:6379/0
            CELERY_RESULT_BACKEND: redis://redis:6379/0
            SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
        volumes:
            - ./data/models:/app/data/models
            - ./data/proofs:/app/data/proofs
            - ./logs:/app/logs
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - veranode-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "true"]
            interval: 30s
            timeout: 5s
            retries: 1

    # Celery Beat (for periodic tasks)
    celery-beat:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: veranode-celery-beat
        command: celery -A app.workers.celery_app beat --loglevel=info
        environment:
            DATABASE_HOST: postgres
            DATABASE_PORT: 5432
            DATABASE_USER: veranode
            DATABASE_PASSWORD: ${DATABASE_PASSWORD:-veranode_prod_password}
            DATABASE_NAME: veranode_db
            REDIS_URL: redis://redis:6379/0
            CELERY_BROKER_URL: redis://redis:6379/0
            CELERY_RESULT_BACKEND: redis://redis:6379/0
            SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
        depends_on:
            - redis
        networks:
            - veranode-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "true"]
            interval: 30s
            timeout: 5s
            retries: 1

volumes:
    postgres_data:
    redis_data:

networks:
    veranode-network:
        driver: bridge